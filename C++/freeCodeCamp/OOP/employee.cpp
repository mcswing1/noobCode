// Reference URL: https://www.youtube.com/watch?v=wN0x9eZLix4&t=388 - 6:14
// Classes are user-defined datatypes - 3:45

#include <iostream>
using std::string;

// The class below does not represent data, it is a blueprint. When we create our employee, this class serves as the model. - 8:53
// By default, everything in a class for C++ is private by default. C++ has three access modifiers: public, private and protected, with protected being somewhere between public and private. - 10:40
class Employee {
// The private access modifier (shown below) is normally not declared explicitly, since it is the default setting. 
// private:
public:
    // We declare std::string up top so we can just format the variables below without having to type std:: over and over again.
    // std::string Name;
    // std::string Company;
    string Name;
    string Company;
    int Age;

    // A class method (aka behavior) is basically a function - 14:53
    void IntroduceYourself(){
        std::cout << "Name - " << Name << std::endl;
        std::cout << "Company - " << Company << std::endl;
        std::cout << "Age - " << Age << std::endl;
    }

    // A constructor is a special type of method that is invoked each time an object of a class is created. - 19:20
    // A default constructor is one that is automatically generated by the compiler. - 20:30
    // Three rules for constructors: 
    // 1) A constructor does not have a return type.
    // 2) A constructor has a name that is the same as the class that it belongs to (i.e. Constructor for class Employee is called Employee)
    // 3) A constructor is public (there are exceptions to this rule) - 22:10
    // We will pass the values of the Employee class in as parameters to the constructor. - 23:50
    // Once we build our own constructor, we lose the default constructor. - 25:00
    Employee(string name, string company, int age) {
        Name = name;
        Company = company;
        Age = age; 

    }

};

int main()
{
    // Create an object of the Employee class
    Employee employee1 = Employee("Saldina", "YT-CodeBeauty", 25); 
    /* employee1.Name = "Saldina";
    employee1.Company = "YT-CodeBeauty";
    employee1.Age = 25; */ 
    employee1.IntroduceYourself(); 

    Employee employee2 = Employee("John", "Amazon", 35);
    /* employee2.Name = "John";
    employee2.Company = "Amazon";
    employee2.Age = 35; */
    employee2.IntroduceYourself(); 


}